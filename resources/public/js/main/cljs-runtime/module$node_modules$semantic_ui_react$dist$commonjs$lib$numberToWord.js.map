{
"version":3,
"file":"module$node_modules$semantic_ui_react$dist$commonjs$lib$numberToWord.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjIA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,YAAR,CA8BAA,QAAqB,CAACC,KAAD,CAAQ,CAC3B,IAAIC,KAAO,MAAOD,MAElB,OAAa,QAAb,GAAIC,IAAJ,EAAkC,QAAlC,GAAyBA,IAAzB,CACSC,eAAA,CAAgBF,KAAhB,CADT,EACmCA,KADnC,CAIO,EAPoB,CA7B7BH,QAAQK,CAAAA,eAAR,CAA0B,IAAK,EAC/B,KAAIA,gBAAkB,CACpB,EAAG,KADiB,CAEpB,EAAG,KAFiB,CAGpB,EAAG,OAHiB,CAIpB,EAAG,MAJiB,CAKpB,EAAG,MALiB,CAMpB,EAAG,KANiB,CAOpB,EAAG,OAPiB,CAQpB,EAAG,OARiB,CASpB,EAAG,MATiB,CAUpB,GAAI,KAVgB,CAWpB,GAAI,QAXgB,CAYpB,GAAI,QAZgB,CAapB,GAAI,UAbgB,CAcpB,GAAI,UAdgB,CAepB,GAAI,SAfgB,CAgBpB,GAAI,SAhBgB,CA0BtBL,QAAQK,CAAAA,eAAR;AAA0BA,eAhCuG;",
"sources":["node_modules/semantic-ui-react/dist/commonjs/lib/numberToWord.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$semantic_ui_react$dist$commonjs$lib$numberToWord\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.numberToWord = numberToWord;\nexports.numberToWordMap = void 0;\nvar numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n};\n/**\n * Return the number word for numbers 1-16.\n * Returns strings or numbers as is if there is no corresponding word.\n * Returns an empty string if value is not a string or number.\n * @param {string|number} value The value to convert to a word.\n * @returns {string}\n */\n\nexports.numberToWordMap = numberToWordMap;\n\nfunction numberToWord(value) {\n  var type = typeof value;\n\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","numberToWord","value","type","numberToWordMap"]
}
