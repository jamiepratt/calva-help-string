shadow$provide.module$node_modules$semantic_ui_react$dist$commonjs$collections$Form$FormGroup=function(global,require,module,exports){function FormGroup(props){var children=props.children,className=props.className,inline=props.inline,unstackable=props.unstackable,widths=props.widths;className=(0,_clsx.default)((0,_lib.useKeyOnly)(props.grouped,"grouped"),(0,_lib.useKeyOnly)(inline,"inline"),(0,_lib.useKeyOnly)(unstackable,"unstackable"),(0,_lib.useWidthProp)(widths,null,!0),"fields",className);inline=
(0,_lib.getUnhandledProps)(FormGroup,props);props=(0,_lib.getElementType)(FormGroup,props);return _react.default.createElement(props,(0,_extends2.default)({},inline,{className}),children)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_clsx=global(require("module$node_modules$clsx$dist$clsx"));module=global(require("module$node_modules$prop_types$index"));
var _react=global(require("module$node_modules$react$index")),_lib=require("module$node_modules$semantic_ui_react$dist$commonjs$lib$index");FormGroup.handledProps="as children className grouped inline unstackable widths".split(" ");FormGroup.propTypes={as:module.default.elementType,children:module.default.node,className:module.default.string,grouped:_lib.customPropTypes.every([_lib.customPropTypes.disallow(["inline"]),module.default.bool]),inline:_lib.customPropTypes.every([_lib.customPropTypes.disallow(["grouped"]),
module.default.bool]),unstackable:module.default.bool,widths:module.default.oneOf([].concat(_lib.SUI.WIDTHS,["equal"]))};exports.default=FormGroup}
//# sourceMappingURL=module$node_modules$semantic_ui_react$dist$commonjs$collections$Form$FormGroup.js.map
