{"version":3,"sources":["com/fulcrologic/semantic_ui/modules/popup/ui_popup.cljc"],"mappings":";AAKE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAKA,8DAiCK,AAACC,0DAAgBC","names":["com.fulcrologic.semantic-ui.modules.popup.ui-popup/ui-popup","com.fulcrologic.semantic-ui.factory-helpers/factory-apply","js/shadow.js.shim.module$semantic_ui_react$Popup"],"sourcesContent":["(ns com.fulcrologic.semantic-ui.modules.popup.ui-popup\n  (:require\n    [com.fulcrologic.semantic-ui.factory-helpers :as h]\n    #?(:cljs [\"semantic-ui-react$Popup\" :as Popup])))\n\n  (def ui-popup\n  \"A Popup displays additional information on top of a page.\n\n  Props:\n    - as (elementType): An element type to render as (string or function).\n    - basic (bool): Display the popup without the pointing arrow.\n    - children (node): Primary content.\n    - className (string): Additional classes.\n    - content (custom): Simple text content for the popover.\n    - context (object|custom): Existing element the pop-up should be bound to. ()\n    - disabled (bool): A disabled popup only renders its trigger.\n    - eventsEnabled (bool): Enables the Popper.js event listeners.\n    - flowing (bool): A flowing Popup has no maximum width and continues to flow to fit its content.\n    - header (custom): Header displayed above the content in bold.\n    - hideOnScroll (bool): Hide the Popup when scrolling the window.\n    - hoverable (bool): Whether the popup should not close on hover.\n    - inverted (bool): Invert the colors of the Popup.\n    - offset (func|arrayOf): Offset values in px unit to apply to rendered popup. The basic offset accepts an ()\n    - on (enum|arrayOf): Events triggering the popup. (hover, click, focus)\n    - onClose (func): Called when a close event happens.\n    - onMount (func): Called when the portal is mounted on the DOM.\n    - onOpen (func): Called when an open event happens.\n    - onUnmount (func): Called when the portal is unmounted from the DOM.\n    - pinned (bool): Disables automatic repositioning of the component, it will always be placed according to the position value.\n    - popper (custom): A wrapping element for an actual content that will be used for positioning.\n    - popperDependencies (array): A popup can have dependencies which update will schedule a position update.\n    - popperModifiers (array): An array containing custom settings for the Popper.js modifiers.\n    - position (enum): Position for the popover. (top center, top left, top right, bottom center, bottom left, bottom right, right center, left center)\n    - positionFixed (bool): Tells `Popper.js` to use the `position: fixed` strategy to position the popover.\n    - size (enum): Popup size. (mini, tiny, small, large, huge)\n    - style (object): Custom Popup style.\n    - trigger (node): Element to be rendered in-place where the popup is defined.\n    - wide (bool|enum): Popup width. (very)\"\n   #?(:cljs (h/factory-apply Popup)))\n"],"x_google_ignoreList":[0]}