{
"version":3,
"file":"module$node_modules$semantic_ui_react$dist$commonjs$addons$Radio$Radio.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBnIC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAAA,IAChBC,OAASD,KAAMC,CAAAA,MADC,CAEhBC,OAASF,KAAME,CAAAA,MAFC,CAGhBC,KAAOH,KAAMG,CAAAA,IACbC,MAAAA,CAAO,GAAIC,IAAKC,CAAAA,iBAAT,EAA4BP,KAA5B,CAAmCC,KAAnC,CAKX,OAAoBO,OAAOC,CAAAA,OAAQC,CAAAA,aAAf,CAA6BC,SAAUF,CAAAA,OAAvC,CAAgD,GAAIG,SAAUH,CAAAA,OAAd,EAAuB,EAAvB,CAA2BJ,KAA3B,CAAiC,CAC7FD,IAD6F,CAEnGS,MAHU,EAAEX,MAAF,EAAYC,MAAZ,CAGVU,EAHiCC,IAAAA,EACkE,CAG3FZ,MAH2F,CAI3FC,MAJ2F,CAAjC,CAAhD,CATA,CAnBlBY,MAAAA,CAAyBlB,OAAA,CAAQ,kEAAR,CAE7BE,QAAQiB,CAAAA,UAAR,CAAqB,CAAA,CACrBjB,QAAQU,CAAAA,OAAR;AAAkB,IAAK,EAEvB,KAAIG,UAAYG,MAAA,CAAuBlB,OAAA,CAAQ,oDAAR,CAAvB,CAAhB,CAEIW,OAASO,MAAA,CAAuBlB,OAAA,CAAQ,iCAAR,CAAvB,CAFb,CAIIS,KAAOT,OAAA,CAAQ,+DAAR,CAJX,CAMIc,UAAYI,MAAA,CAAuBlB,OAAA,CAAQ,4EAAR,CAAvB,CAyBhBG,MAAMiB,CAAAA,YAAN,CAAqB,CAAC,QAAD,CAAW,QAAX,CAAqB,MAArB,CACrBjB,MAAMkB,CAAAA,SAAN,CAA0D,CAExDhB,OAAQS,SAAUF,CAAAA,OAAQS,CAAAA,SAAUhB,CAAAA,MAFoB,CAKxDC,OAAQQ,SAAUF,CAAAA,OAAQS,CAAAA,SAAUf,CAAAA,MALoB,CAQxDC,KAAMO,SAAUF,CAAAA,OAAQS,CAAAA,SAAUd,CAAAA,IARsB,CAU1DJ;KAAMmB,CAAAA,YAAN,CAAqB,CACnBf,KAAM,OADa,CAIrBL,QAAQU,CAAAA,OAAR,CADeT,KArDoH;",
"sources":["node_modules/semantic-ui-react/dist/commonjs/addons/Radio/Radio.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$semantic_ui_react$dist$commonjs$addons$Radio$Radio\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Checkbox = _interopRequireDefault(require(\"../../modules/Checkbox\"));\n\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = (0, _lib.getUnhandledProps)(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return /*#__PURE__*/_react.default.createElement(_Checkbox.default, (0, _extends2.default)({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: _Checkbox.default.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: _Checkbox.default.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: _Checkbox.default.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nvar _default = Radio;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Radio","props","slider","toggle","type","rest","_lib","getUnhandledProps","_react","default","createElement","_Checkbox","_extends2","radio","undefined","_interopRequireDefault","__esModule","handledProps","propTypes","defaultProps"]
}
