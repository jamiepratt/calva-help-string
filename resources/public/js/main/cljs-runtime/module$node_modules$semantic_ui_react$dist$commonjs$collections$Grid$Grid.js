shadow$provide.module$node_modules$semantic_ui_react$dist$commonjs$collections$Grid$Grid=function(global,require,module,exports){function Grid(props){var celled=props.celled,children=props.children,className=props.className,columns=props.columns,container=props.container,divided=props.divided,doubling=props.doubling,inverted=props.inverted,padded=props.padded,relaxed=props.relaxed,reversed=props.reversed,stackable=props.stackable,stretched=props.stretched,textAlign=props.textAlign,verticalAlign=props.verticalAlign;
celled=(0,_clsx.default)("ui",(0,_lib.useKeyOnly)(props.centered,"centered"),(0,_lib.useKeyOnly)(container,"container"),(0,_lib.useKeyOnly)(doubling,"doubling"),(0,_lib.useKeyOnly)(inverted,"inverted"),(0,_lib.useKeyOnly)(stackable,"stackable"),(0,_lib.useKeyOnly)(stretched,"stretched"),(0,_lib.useKeyOrValueAndKey)(celled,"celled"),(0,_lib.useKeyOrValueAndKey)(divided,"divided"),(0,_lib.useKeyOrValueAndKey)(padded,"padded"),(0,_lib.useKeyOrValueAndKey)(relaxed,"relaxed"),(0,_lib.useMultipleProp)(reversed,
"reversed"),(0,_lib.useTextAlignProp)(textAlign),(0,_lib.useVerticalAlignProp)(verticalAlign),(0,_lib.useWidthProp)(columns,"column",!0),"grid",className);className=(0,_lib.getUnhandledProps)(Grid,props);props=(0,_lib.getElementType)(Grid,props);return _react.default.createElement(props,(0,_extends2.default)({},className,{className:celled}),children)}var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;
var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _react=_interopRequireDefault(require("module$node_modules$react$index")),_lib=require("module$node_modules$semantic_ui_react$dist$commonjs$lib$index");module=_interopRequireDefault(require("module$node_modules$semantic_ui_react$dist$commonjs$collections$Grid$GridColumn"));
require=_interopRequireDefault(require("module$node_modules$semantic_ui_react$dist$commonjs$collections$Grid$GridRow"));Grid.handledProps="as celled centered children className columns container divided doubling inverted padded relaxed reversed stackable stretched textAlign verticalAlign".split(" ");Grid.Column=module.default;Grid.Row=require.default;Grid.propTypes={as:global.default.elementType,celled:global.default.oneOfType([global.default.bool,global.default.oneOf(["internally"])]),centered:global.default.bool,
children:global.default.node,className:global.default.string,columns:global.default.oneOf([].concat(_lib.SUI.WIDTHS,["equal"])),container:global.default.bool,divided:global.default.oneOfType([global.default.bool,global.default.oneOf(["vertically"])]),doubling:global.default.bool,inverted:global.default.bool,padded:global.default.oneOfType([global.default.bool,global.default.oneOf(["horizontally","vertically"])]),relaxed:global.default.oneOfType([global.default.bool,global.default.oneOf(["very"])]),
reversed:_lib.customPropTypes.multipleProp("computer;computer vertically;mobile;mobile vertically;tablet;tablet vertically".split(";")),stackable:global.default.bool,stretched:global.default.bool,textAlign:global.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),verticalAlign:global.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)};exports.default=Grid}
//# sourceMappingURL=module$node_modules$semantic_ui_react$dist$commonjs$collections$Grid$Grid.js.map
