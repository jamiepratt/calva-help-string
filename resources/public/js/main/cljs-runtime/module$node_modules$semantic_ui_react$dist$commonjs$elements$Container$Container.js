shadow$provide.module$node_modules$semantic_ui_react$dist$commonjs$elements$Container$Container=function(global,require,module,exports){function Container(props){var children=props.children,className=props.className,content=props.content,fluid=props.fluid,textAlign=props.textAlign;className=(0,_clsx.default)("ui",(0,_lib.useKeyOnly)(props.text,"text"),(0,_lib.useKeyOnly)(fluid,"fluid"),(0,_lib.useTextAlignProp)(textAlign),"container",className);fluid=(0,_lib.getUnhandledProps)(Container,props);props=
(0,_lib.getElementType)(Container,props);return _react.default.createElement(props,(0,_extends2.default)({},fluid,{className}),_lib.childrenUtils.isNil(children)?content:children)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_clsx=global(require("module$node_modules$clsx$dist$clsx"));module=global(require("module$node_modules$prop_types$index"));
var _react=global(require("module$node_modules$react$index")),_lib=require("module$node_modules$semantic_ui_react$dist$commonjs$lib$index");Container.handledProps="as children className content fluid text textAlign".split(" ");Container.propTypes={as:module.default.elementType,children:module.default.node,className:module.default.string,content:_lib.customPropTypes.contentShorthand,fluid:module.default.bool,text:module.default.bool,textAlign:module.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)};exports.default=
Container}
//# sourceMappingURL=module$node_modules$semantic_ui_react$dist$commonjs$elements$Container$Container.js.map
